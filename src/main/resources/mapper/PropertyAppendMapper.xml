<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.group.category.dao.PropertyAppendMapper">
  <resultMap id="BaseResultMap" type="cn.group.category.pojo.PropertyAppend">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="display_name" jdbcType="VARCHAR" property="displayName" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="value_type" jdbcType="VARCHAR" property="valueType" />
    <result column="value_length" jdbcType="INTEGER" property="valueLength" />
    <result column="input_type" jdbcType="VARCHAR" property="inputType" />
    <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
    <result column="use_default" jdbcType="VARCHAR" property="useDefault" />
    <result column="is_required" jdbcType="VARCHAR" property="isRequired" />
    <result column="is_show" jdbcType="VARCHAR" property="isShow" />
    <result column="orders" jdbcType="INTEGER" property="orders" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, display_name, field_name, value_type, value_length, input_type, 
    default_value, use_default, is_required, is_show, orders
  </sql>
  <select id="selectByExample" parameterType="cn.group.category.pojo.PropertyAppendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from property_append
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from property_append
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from property_append
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.group.category.pojo.PropertyAppendExample">
    delete from property_append
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.group.category.pojo.PropertyAppend">
    insert into property_append (id, category_id, display_name, 
      field_name, value_type, value_length, 
      input_type, default_value, use_default, 
      is_required, is_show, orders
      )
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{displayName,jdbcType=VARCHAR}, 
      #{fieldName,jdbcType=VARCHAR}, #{valueType,jdbcType=VARCHAR}, #{valueLength,jdbcType=INTEGER}, 
      #{inputType,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR}, #{useDefault,jdbcType=VARCHAR}, 
      #{isRequired,jdbcType=VARCHAR}, #{isShow,jdbcType=VARCHAR}, #{orders,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.group.category.pojo.PropertyAppend">
    insert into property_append
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="displayName != null">
        display_name,
      </if>
      <if test="fieldName != null">
        field_name,
      </if>
      <if test="valueType != null">
        value_type,
      </if>
      <if test="valueLength != null">
        value_length,
      </if>
      <if test="inputType != null">
        input_type,
      </if>
      <if test="defaultValue != null">
        default_value,
      </if>
      <if test="useDefault != null">
        use_default,
      </if>
      <if test="isRequired != null">
        is_required,
      </if>
      <if test="isShow != null">
        is_show,
      </if>
      <if test="orders != null">
        orders,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="displayName != null">
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="valueType != null">
        #{valueType,jdbcType=VARCHAR},
      </if>
      <if test="valueLength != null">
        #{valueLength,jdbcType=INTEGER},
      </if>
      <if test="inputType != null">
        #{inputType,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="useDefault != null">
        #{useDefault,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        #{isRequired,jdbcType=VARCHAR},
      </if>
      <if test="isShow != null">
        #{isShow,jdbcType=VARCHAR},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.group.category.pojo.PropertyAppendExample" resultType="java.lang.Long">
    select count(*) from property_append
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update property_append
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.displayName != null">
        display_name = #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldName != null">
        field_name = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.valueType != null">
        value_type = #{record.valueType,jdbcType=VARCHAR},
      </if>
      <if test="record.valueLength != null">
        value_length = #{record.valueLength,jdbcType=INTEGER},
      </if>
      <if test="record.inputType != null">
        input_type = #{record.inputType,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null">
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.useDefault != null">
        use_default = #{record.useDefault,jdbcType=VARCHAR},
      </if>
      <if test="record.isRequired != null">
        is_required = #{record.isRequired,jdbcType=VARCHAR},
      </if>
      <if test="record.isShow != null">
        is_show = #{record.isShow,jdbcType=VARCHAR},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update property_append
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      display_name = #{record.displayName,jdbcType=VARCHAR},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      value_type = #{record.valueType,jdbcType=VARCHAR},
      value_length = #{record.valueLength,jdbcType=INTEGER},
      input_type = #{record.inputType,jdbcType=VARCHAR},
      default_value = #{record.defaultValue,jdbcType=VARCHAR},
      use_default = #{record.useDefault,jdbcType=VARCHAR},
      is_required = #{record.isRequired,jdbcType=VARCHAR},
      is_show = #{record.isShow,jdbcType=VARCHAR},
      orders = #{record.orders,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.group.category.pojo.PropertyAppend">
    update property_append
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="displayName != null">
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="valueType != null">
        value_type = #{valueType,jdbcType=VARCHAR},
      </if>
      <if test="valueLength != null">
        value_length = #{valueLength,jdbcType=INTEGER},
      </if>
      <if test="inputType != null">
        input_type = #{inputType,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="useDefault != null">
        use_default = #{useDefault,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        is_required = #{isRequired,jdbcType=VARCHAR},
      </if>
      <if test="isShow != null">
        is_show = #{isShow,jdbcType=VARCHAR},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.group.category.pojo.PropertyAppend">
    update property_append
    set category_id = #{categoryId,jdbcType=INTEGER},
      display_name = #{displayName,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      value_type = #{valueType,jdbcType=VARCHAR},
      value_length = #{valueLength,jdbcType=INTEGER},
      input_type = #{inputType,jdbcType=VARCHAR},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      use_default = #{useDefault,jdbcType=VARCHAR},
      is_required = #{isRequired,jdbcType=VARCHAR},
      is_show = #{isShow,jdbcType=VARCHAR},
      orders = #{orders,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>